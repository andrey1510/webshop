plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.2.0'
}

group = 'com'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

bootJar {
    archiveFileName = 'paymentservice.jar'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'org.yaml:snakeyaml:2.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-api:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-webflux-core:1.7.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.r2dbc:r2dbc-h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "${rootProject.projectDir}/paymentservice-api.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.paymentservice.generated.api"
    modelPackage = "com.paymentservice.dto"

    configOptions = [
            reactive: "true",
            interfaceOnly: "true",
            useSpringController: "true",
            useSpringWebFlux: "true",
            skipDefaultInterface: "true",
            useTags: "true",
            openApiNullable: "false",
            useBeanValidation: "false",
            delegatePattern: "false",
            useOptional: "false",
            returnResponse: "false",
            hideGenerationTimestamp: "true"
    ]


}

sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/src/main/java"
        }
    }
}

compileJava.dependsOn tasks.openApiGenerate

tasks.named('test') {
    useJUnitPlatform()
}